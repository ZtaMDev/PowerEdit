{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to PowerEdit","text":"<p>PowerEdit is a lightweight, customizable code editor built with PyQt5 after a month of continuous development. Here you\u2019ll find everything you need to:</p> <ul> <li>Install and get started in minutes  </li> <li>Master its interface and workflows  </li> <li>Create and apply your own themes (<code>.theme</code> files)  </li> <li>Develop extensions with <code>.extend</code> packs  </li> <li>Keep it up to date automatically  </li> </ul> <p>\ud83c\udfaf Our goal is to provide you with a simple, fast, and extensible experience. Explore the documentation using the left-hand menu and begin your journey with PowerEdit!</p> <p>Hello! I\u2019m very proud to launch this project\u2014I\u2019ve been developing it for one month, and in my opinion it has come a long way. I\u2019m publishing it on GitHub so everyone can use it. The editor works quite well, and I\u2019d love your help to improve it as much as possible, since this is my first open-source project of this kind and I want to take it to the next level.  </p> <p>It includes an Update Manager that will keep the editor on the latest version, and a Source Downloader: under Help \u2192 Download Source you can grab the entire codebase for editing. (I recommend using VS Code rather than PowerEdit for editing, since there are still some indentation quirks in the editor.)  </p> <p>With your help, I hope to iron out those issues, add new features, and soon introduce AI\u2026 completely free of charge!</p>"},{"location":"changelog/","title":"Changelog","text":""},{"location":"changelog/#initial-chargelog","title":"Initial ChargeLog...","text":""},{"location":"changelog/#key-features","title":"\ud83d\udccb Key Features","text":"<ul> <li>Tabbed editor with syntax highlighting  </li> <li>Custom themes loaded from <code>.theme</code> files  </li> <li>Extension packs via <code>.extend</code> files  </li> <li>Integrated console powered by <code>pyte</code> for real-time output  </li> <li>Update Manager fetches &amp; installs new releases automatically  </li> <li>Source Downloader pulls the latest code ZIP right from GitHub  </li> </ul>"},{"location":"release_notes/","title":"Release Notes","text":"<p>Hola! Estoy muy orgulloso de lanzar este proyecto, pues lo llevo desarrollando 1 mes y ha avanzado much\u00edsimo en mi opini\u00f3n. Por eso lo subo a GitHub para que todos puedan usarlo. El editor funciona bastante bien y quiero que me ayuden a mejorarlo lo m\u00e1s posible, ya que es mi primer proyecto open source de este tipo y quiero llevarlo al siguiente nivel.  </p> <p>Cuenta con un Update Manager que actualizar\u00e1 el editor a la \u00faltima versi\u00f3n, y un gestor de descargas de c\u00f3digo fuente: desde la secci\u00f3n Help \u2192 Download Source puedes descargar todo el c\u00f3digo para su edici\u00f3n. (Recomiendo usar VS Code en lugar de PowerEdit para editar, pues a\u00fan hay algunos conflictos de indentaci\u00f3n.)  </p> <p>Con vuestra ayuda espero resolver esos detalles, a\u00f1adir nuevas funcionalidades y, en breve, incorporar IA\u2026 \u00a1de forma completamente gratuita!  </p>"},{"location":"release_notes/#poweredit-v10-release-notes","title":"PowerEdit v1.0 Release Notes","text":"<p>I\u2019m thrilled to share PowerEdit, my very first open-source code editor project. After a month of intense development, it\u2019s matured into something I\u2019m proud of. Here on GitHub, you can:</p> <ul> <li>Download, use, and explore the editor freely  </li> <li>Contribute improvements and new features  </li> <li>Report any bugs or quirks you encounter  </li> </ul>"},{"location":"release_notes/#why-poweredit-matters","title":"\u2728 Why PowerEdit Matters","text":"<ul> <li>Rapid progress in just 30 days of coding  </li> <li>Simple, intuitive UI built with PyQt5  </li> <li>Fully customizable via <code>.theme</code> and <code>.extend</code> files  </li> <li>Integrated Update Manager keeps you on the latest version  </li> <li>Source Downloader under Help \u2192 Download Source <p>Instantly pull the entire codebase (I recommend VS Code for editing until indentation issues are ironed out!)</p> </li> </ul>"},{"location":"release_notes/#how-you-can-help","title":"\ud83d\udd27 How You Can Help","text":"<ol> <li>Star \u2b50 the repo to show support  </li> <li>Open issues for any bugs or UX problems  </li> <li>Submit pull requests with enhancements or fixes  </li> <li>Suggest integrations (e.g. AI-powered code completion)  </li> <li>Share PowerEdit with friends and classmates  </li> </ol>"},{"location":"release_notes/#key-features","title":"\ud83d\udccb Key Features","text":"<ul> <li>Tabbed editor with syntax highlighting  </li> <li>Custom themes loaded from <code>.theme</code> files  </li> <li>Extension packs via <code>.extend</code> files  </li> <li>Integrated console powered by <code>pyte</code> for real-time output  </li> <li>Update Manager fetches &amp; installs new releases automatically  </li> <li>Source Downloader pulls the latest code ZIP right from GitHub  </li> </ul>"},{"location":"release_notes/#whats-next","title":"\ud83c\udf1f What\u2019s Next?","text":"<ul> <li>Indentation &amp; formatting fixes </li> <li>Plugin/extension API (think VS Code-style)  </li> <li>Built-in AI assistants (free!)  </li> <li>Cross-platform installers (Windows, macOS, Linux)  </li> </ul>"},{"location":"installation/getting_started/","title":"How to Install PowerEdit","text":"<p>Installing PowerEdit is very simple! Just follow the steps below and you\u2019ll have it up and running in no time.</p>"},{"location":"installation/getting_started/#installation-steps","title":"Installation Steps:","text":"<ol> <li>Download the latest version</li> <li> <p>Visit the project repository and download the latest release from this link: \ud83d\udd17 Releases.</p> </li> <li> <p>Run the installer</p> </li> <li>Open the file <code>PowerEdit-Setup.exe</code>.</li> </ol> <p>Note: If a SmartScreen warning appears saying the file should not be run, click \u201cMore info\u201d and then \u201cRun anyway\u201d. Don\u2019t worry, it\u2019s not a virus! The source code is available for review on GitHub: \ud83d\udd17 View Repository.</p> <ol> <li> <p>Follow the installation wizard</p> </li> <li> <p>Accept the terms and conditions then click Next, , and proceed with Install.</p> <p>If you wish, check the option \"Create desktop icon\" before finishing.</p> <p></p> </li> </ol> <p>You're all set! PowerEdit will be installed and ready to use.</p>"},{"location":"installation/update_manager/","title":"Update Manager","text":"<p>PowerEdit includes a built-in update manager that automatically checks for the latest releases on GitHub, downloads them, and installs them for you.</p>"},{"location":"installation/update_manager/#how-it-works-and-how-to-use-it","title":"How it works and how to use it","text":"<ul> <li> <p>The update manager always launches before the editor itself.  </p> <p>(Note: This is why PowerEdit may take a little longer to open. In the future, an option will be added to disable the update manager by default.)</p> </li> <li> <p>When executed, it checks the GitHub releases of PowerEdit and compares the current version with the latest one based on the release tags.</p> </li> <li> <p>If a new version is available, the update manager UI is launched.</p> </li> </ul>"},{"location":"installation/update_manager/#step-by-step-process","title":"Step-by-step process:","text":"<ul> <li>Initial prompt </li> <li> <p>The first window will ask whether you want to update.  </p> <p>Updates may introduce bugs or other considerations, so choose wisely.</p> </li> <li> <p>If you select Yes, the update process continues.</p> </li> <li> <p>If you select No, PowerEdit will launch without updating.</p> <p></p> </li> </ul> <ul> <li>Update interface    If you choose to update, you will see two buttons:</li> <li><code>Download Install</code></li> <li> <p><code>Start PowerEdit</code></p> </li> <li> <p>To update, simply click Download Instal.</p> </li> <li> <p>The installer for the new version will be downloaded and automatically launched.</p> <p></p> </li> </ul> <ul> <li>Installing the update    The installer is similar to previous versions but contains the latest features and changes.         <p>If you\u2019re not familiar with the installation process, refer to the Getting Started section for a complete guide.</p> </li> </ul>"},{"location":"installation/update_manager/#summary","title":"Summary","text":"<p>The update manager ensures you always have the latest features, bug fixes, and improvements\u2014effortlessly.</p>"},{"location":"usage/autocompletion/","title":"Autocompletion","text":"<p>The autocompletion feature is a standard element in code editors, and PowerEdit includes its own implementation to help you write code faster and more accurately.</p> <p></p>"},{"location":"usage/autocompletion/#how-it-works","title":"How It Works","text":"<p>The autocompletion system works by extracting keywords and values from the installed <code>.extend</code> files. These files define language-specific data and are selected based on the active file type and syntax mode.</p> <p>Note: Autocompletion in PowerEdit is still under development and has some limitations. It does not currently suggest words based on context, and it does not trigger correctly when typing next to characters like <code>&lt;</code>,  <code>&gt;</code>,  <code>;</code>,  <code>=</code>,  or  <code>:</code>.</p> <p>Each recognized value type is paired with a small icon to help differentiate it. The system currently supports the following value types:</p>"},{"location":"usage/autocompletion/#supported-categories","title":"Supported Categories","text":"Type Description Example(s) Icon(s) <code>extensions</code> File types associated with the syntax <code>.py</code>, <code>.html</code>, <code>.css</code> None <code>keywords</code> Language-specific keywords <code>def</code>, <code>if</code>, <code>return</code> <code>builtins</code> Built-in functions or methods <code>abs()</code>, <code>format()</code> <code>modules</code> Standard or third-party libraries <code>os</code>, <code>sys</code>, <code>math</code> <code>types</code> Data or syntax types <code>int</code>, <code>float</code>, <code>str</code> <code>values</code> Common values (e.g. in CSS) <code>5px</code>, <code>auto</code>, <code>block</code> <code>color_names</code> Color values recognized by the syntax (CSS) <code>white</code>, <code>red</code>, <code>blue</code> None <code>functions</code> Functions dynamically detected in your own code <code>my_function()</code>, etc. <p>Note: In future updates, you will be able to define your own autocomplete entries for external modules, improving support for libraries and frameworks.</p>"},{"location":"usage/autocompletion/#source-of-suggestions","title":"Source of Suggestions","text":"<p>All suggestions come from: - The currently selected language - The active file type (e.g., <code>.py</code>, <code>.html</code>, <code>.css</code>) - The <code>.extend</code> file associated with that language</p> <p>\u2192 Learn more about <code>.extend</code> files and how to define autocomplete values</p>"},{"location":"usage/console/","title":"Console","text":"<p>The Console is a fundamental component in PowerEdit, essential for developers working with command-line tools and frameworks such as Flask, Django, or Node.js.</p> <p></p>"},{"location":"usage/console/#features","title":"Features","text":"<ul> <li> <p>Command Execution   You can run shell commands directly through the input field located at the bottom of the editor interface.</p> </li> <li> <p>Stop Active Processes   To stop a running command (such as a server), simply press <code>Ctrl+C</code> inside the console input.</p> </li> <li> <p>Open Live Preview Links   When working with frameworks that launch a local server (like Flask), the console automatically detects and makes links clickable.   \u2192 Try it out with Live Preview</p> </li> <li> <p>Theme Integration   The console automatically adapts to the current color theme for a seamless visual experience.</p> </li> </ul>"},{"location":"usage/console/#notes","title":"Notes","text":"<ul> <li> <p>\u26a0\ufe0f In Development:   Full support for standard shell commands is still under development. The goal is to make the console behave like a native Windows or Unix terminal.</p> </li> <li> <p>\ud83e\uddf1 Modular Layout Coming Soon:   In future versions, both the Console and the File Explorer will become modular components, allowing you to dock and position them anywhere in the editor layout.</p> </li> </ul> <p>\ud83d\udca1 If you're interested in customizing the Console behavior or layout, you can edit the source code of PowerEdit. \u2192 Download it from the GitHub repository or directly through the app via Help \u2192 Download Source Code.</p>"},{"location":"usage/download-source/","title":"Download Source","text":""},{"location":"usage/download-source/#download-source","title":"Download Source","text":"<p>This feature allows users to download the editor's source code directly from within the application.</p> <p>To use it, go to Help \u2192 Download Source Code, and a download menu will appear.</p> <ul> <li>First, select the folder where you want to save the files (by default, it is set to the user's Documents folder).</li> <li>Then, simply click the download button to fetch the source code directly from GitHub.</li> </ul> <p>This makes it easy and quick to get the latest code without leaving the editor.</p>"},{"location":"usage/editor/","title":"Editor","text":"<p>The Editor is the core component of PowerEdit, designed with the essential features of a modern code editor. It includes a clean text input area, line numbers, and a scrollbar on the right side for easy navigation.</p> <p>Note: A minimap scroll is currently under development and not yet fully functional. You can try enabling it by editing the source code here in the GitHub repository, and feel free to contribute to the project to help improve the experience for all users.</p> <p></p>"},{"location":"usage/editor/#features","title":"Features","text":""},{"location":"usage/editor/#file-display","title":"File Display","text":"<p>The editor displays the contents of any file opened from the - File Explorer, or - File Menu.</p>"},{"location":"usage/editor/#tab-system","title":"Tab System","text":"<p>PowerEdit uses a tabbed interface that allows you to open multiple files simultaneously\u2014just like any modern code editor.</p> <ul> <li>All open tabs and editor state are preserved when exiting the application.</li> <li>The last active tab is also saved and automatically reopened the next time you launch PowerEdit.</li> </ul> <p>\u26a0\ufe0f Warning: If you close the editor without saving, any unsaved changes to the code will be lost. Be sure to save your work!</p>"},{"location":"usage/editor/#layout-system","title":"Layout System","text":"<p>The editor supports a layout system, which allows you to rearrange certain widgets like the file explorer and (in future updates) additional panels.</p> <p>This layout flexibility pairs perfectly with the Live Preview feature, making it ideal for editing HTML, CSS, JS, or any other kind of web-based content.</p> <p>\u2192 Learn more about Live Preview</p>"},{"location":"usage/file-explorer/","title":"File Explorer","text":"<p>The File Explorer provides a structured view of the current project directory. It allows users to interact with files and folders in a simple and integrated way, making it easier to manage the contents of a project.</p>"},{"location":"usage/file-explorer/#core-features","title":"Core Features","text":"<ul> <li> <p>Display Project Structure   Shows all files and folders within the selected project root.</p> </li> <li> <p>Create, Delete, and Rename   You can create new files or folders, delete existing ones, and rename them directly from the explorer.</p> </li> </ul> <p>Note: More features are coming soon, including copy/paste, file properties, and more advanced file operations.</p>"},{"location":"usage/file-explorer/#project-management","title":"Project Management","text":"<p>The File Explorer plays a key role in managing your project: - It serves as the entry point for all project resources. - It ensures that the editor loads and interacts with the correct files. - It supports workflows like file opening, saving, and navigation.</p>"},{"location":"usage/file-explorer/#theming-support","title":"Theming Support","text":"<p>The explorer also adapts visually to the active theme selected in PowerEdit. This includes: - Coloring of files and folders to match the theme\u2019s palette. - Highlighted selection styles that reflect the current color scheme. - Seamless integration with light and dark modes, as defined in the <code>.theme</code> file.</p> <p> </p> <p>This makes the explorer not only functional but also aesthetically consistent with the rest of the editor interface.</p> <p>It is tightly integrated with other components such as the Editor and Live Preview, ensuring everything stays in sync while you work.</p>"},{"location":"usage/getting_started/","title":"Getting Started","text":"<p>Welcome to the Getting Started section of the user manual. Here, you will learn both the basic and advanced features of the PowerEdit code editor.</p> <p>This page will likely be updated frequently, as it includes all core functionalities and instructions on how to use them effectively.</p> <p>Note: This section explains how the main features of the editor work and how to use them. It does not cover the creation of custom themes or syntax highlighting extensions.</p>"},{"location":"usage/getting_started/#feature-categories","title":"Feature Categories","text":"<p>Below is a list of the main features of PowerEdit, each with its own dedicated documentation:</p> <ul> <li>Top Menu \u2013 Overview of the main menu options like File, Edit, View, etc.</li> <li>Editor \u2013 The main code editor area with syntax highlighting and multiple tabs.</li> <li>Autocompletion \u2013 The smart code suggestion system and how it works.</li> <li>File Explorer \u2013 Built-in file navigator to manage and open project files.</li> <li>Console \u2013 Integrated terminal to run Python scripts and commands directly.</li> <li>Live Preview \u2013 Real-time preview system for HTML and Markdown files.</li> <li>Download Source Code \u2013 Allows you to download the Power Edit project files.</li> </ul>"},{"location":"usage/live-preview/","title":"Live Preview","text":"<p>Live Preview is one of the most powerful and user-friendly features of PowerEdit. It transforms how you edit web-related code\u2014HTML, CSS, and JavaScript\u2014by providing an instant, interactive preview of your work without needing to save the file first.</p> <p></p> <p></p> <p></p>"},{"location":"usage/live-preview/#key-features","title":"Key Features","text":"<ul> <li> <p>Instant Feedback Without Saving   Live Preview displays all code changes in real time by using an internal live cache. This means you can immediately see the effect of your edits without interrupting your workflow to save and reload.</p> </li> <li> <p>Support for External URLs   Beyond local files, Live Preview can load and display external URLs. This is especially useful for previewing live web apps, frameworks running on localhost servers (like Flask, Django, or Node.js), or even remote resources.</p> </li> <li> <p>Integration with the Console   Live Preview is tightly integrated with the PowerEdit console. When you select a URL in the console, right-clicking it will give you the option to open that URL directly in Live Preview, providing a seamless transition between debugging and viewing your project.</p> </li> <li> <p>Based on PyWebEngine (Chromium)   To ensure the best rendering and compatibility, Live Preview is powered by PyWebEngine, a Chromium-based engine. This means your previews look and behave very similarly to how they would in popular modern browsers like Chrome or Edge.</p> </li> <li> <p>Rich Context Menu   Right-clicking inside the Live Preview window reveals several useful options:  </p> </li> <li>Open the current preview in an external browser for full-featured interaction.  </li> <li>Load any external URL on demand without leaving the editor.  </li> <li>Copy the current preview URL for sharing or debugging.</li> </ul>"},{"location":"usage/live-preview/#how-live-preview-enhances-your-workflow","title":"How Live Preview Enhances Your Workflow","text":"<p>With Live Preview, you no longer need to juggle between your code editor and a separate browser window. It eliminates the tedious cycle of saving, switching windows, and refreshing browsers. Instead, you see your edits instantly rendered, speeding up development and improving accuracy.</p> <p>Whether you are building static websites, interactive frontends, or complex web applications with backend frameworks, Live Preview simplifies testing and iteration.</p>"},{"location":"usage/live-preview/#use-cases","title":"Use Cases","text":"<ul> <li>Frontend Development: Instantly see changes in your HTML, CSS, and JS as you type.  </li> <li>Web Frameworks: Seamlessly preview apps running on localhost servers, integrated with console output.  </li> <li>Remote Content: Load and interact with external web pages or API UIs for testing or reference.</li> </ul>"},{"location":"usage/live-preview/#future-plans","title":"Future Plans","text":"<p>PowerEdit\u2019s Live Preview feature is actively under development. Planned improvements include:</p> <ul> <li>Enhanced debugging tools, such as a JavaScript console panel inside the preview.  </li> <li>Support for viewing and handling errors directly from the preview window.  </li> <li>Additional context menu options for network inspection, DOM exploration, and performance profiling.</li> </ul>"},{"location":"usage/live-preview/#notes","title":"Notes","text":"<ul> <li>Live Preview currently relies on PyWebEngine, which must be properly installed and configured in your environment.  </li> <li>Some complex web apps with advanced security policies (CORS, CSP) may have limitations inside the preview.</li> </ul>"},{"location":"usage/top-menu/","title":"Top Menu","text":"<p>The Top Menu is an essential part of the PowerEdit interface. It allows users to control all major functionalities of the editor through a series of well-organized options.</p> <p>Most of these options have keyboard shortcuts assigned for quicker access and efficiency.</p> <p>Note: In a future update, PowerEdit will include customizable shortcut mappings, allowing users to remap editor shortcuts as they prefer.</p>"},{"location":"usage/top-menu/#file-menu","title":"File Menu","text":"<p>The File menu contains the most important options for managing files and projects within PowerEdit. This menu gives you control over creating, opening, and saving files, as well as managing your workspace.</p> <p></p> <p>Each menu option has a specific purpose and is organized into the following categories:</p> <ul> <li> <p>New Text File (<code>Ctrl+N</code>)   Creates a blank text file with no extension.</p> </li> <li> <p>New File (<code>Ctrl+Alt+N</code>)   Creates a new file with a programming-related extension.  </p> <p>Note: This option ensures that syntax highlighting is applied automatically based on the file extension.</p> </li> <li> <p>New Window (<code>Ctrl+Shift+W</code>)   Opens a fresh instance of the editor.  </p> <p>\u26a0\ufe0f Warning: This will close the current project, discard unsaved changes, and reset open tabs, the file explorer, and the console. Be sure to save your work before using this option.</p> </li> <li> <p>Open File (<code>Ctrl+O</code>)   Opens an existing file in a new tab.</p> </li> <li> <p>Open Folder (<code>Ctrl+Shift+O</code>)   Opens a folder and displays its structure in the file explorer.  </p> <p>Note: This will reset the file explorer and reopen it at the selected path.</p> </li> <li> <p>Save (<code>Ctrl+S</code>)   Saves the current file.</p> </li> <li> <p>Save As (<code>Ctrl+Shift+S</code>)   Saves the current file under a new name or in a different location.</p> </li> <li> <p>Close Current Tab (<code>Ctrl+W</code>)   Closes the currently selected tab.  </p> <p>Note: Only the active tab will be closed; other tabs remain open.</p> </li> <li> <p>Exit   Closes the application.</p> </li> </ul>"},{"location":"usage/top-menu/#edit-menu","title":"Edit Menu","text":"<p>The Edit menu provides essential tools for modifying content within the editor. Although most of these options are commonly used via their keyboard shortcuts, they are also accessible through the top menu.</p> <p></p> <p>These are standard editing commands found in most code editors:</p> <ul> <li> <p>Undo (<code>Ctrl+Z</code>)   Reverts the last change made in the editor.</p> </li> <li> <p>Redo (<code>Ctrl+Y</code>)   Re-applies the last undone action.</p> </li> <li> <p>Cut (<code>Ctrl+X</code>)   Removes the selected text and copies it to the clipboard.</p> </li> <li> <p>Copy (<code>Ctrl+C</code>)   Copies the selected text to the clipboard.</p> </li> <li> <p>Paste (<code>Ctrl+V</code>)   Inserts the content from the clipboard at the current cursor position.</p> </li> <li> <p>Select All (<code>Ctrl+A</code>)   Selects all text in the current document.</p> </li> </ul> <p>These shortcuts follow the classic behavior found in most operating systems and editors.</p>"},{"location":"usage/top-menu/#view-menu","title":"View Menu","text":"<p>The View menu provides options to show, hide, or manage some of the editor's key interface elements. These options allow users to toggle visibility and control the behavior of various widgets such as the file explorer and the integrated console.</p> <p></p> <ul> <li> <p>Toggle File Explorer (<code>Ctrl+Shift+E</code>)   Shows or hides the file explorer panel on the left side of the editor.</p> </li> <li> <p>Toggle Console (<code>Ctrl+Shift+C</code>)   Shows or hides the integrated terminal at the bottom of the interface.</p> </li> <li> <p>Restart Console   Restarts the integrated terminal.  </p> <p>Note: The console will restart in the current project\u2019s root directory. If no project is open, it will default to the user's Documents folder.</p> </li> </ul>"},{"location":"usage/top-menu/#project-menu","title":"Project Menu","text":"<p>Note: The Project menu currently has limited functionality, but here is a full explanation of its use.</p> <p>The Project menu contains a single key option: selecting the root folder (<code>Ctrl+Shift+R</code>) of your project. This root directory becomes the reference point for several core components of PowerEdit:</p> <ul> <li>The integrated console will operate from this directory.</li> <li>The file explorer will open and list contents starting from this path.</li> <li>The Live Preview system will use this root as the base for file indexing and rendering.   \u2192 Learn more about Live Preview</li> </ul> <p>Selecting the root folder helps maintain a unified project context across all tools inside the editor.</p>"},{"location":"usage/top-menu/#highlight-menu","title":"Highlight Menu","text":"<p>The Highlight menu allows you to manually set the syntax highlighting for the currently active tab.</p> <p></p> <p>Its main purpose is to assign the appropriate syntax rules to a file, especially when the file does not have a recognized extension or when automatic detection is not desired.</p> <p>Only supported file types will be available in this menu. These types are determined by their extensions or by definitions included via <code>.extend</code> files.</p> <p>\u2192 Learn more about <code>.extend</code> files and custom syntax definitions</p>"},{"location":"usage/top-menu/#themes-menu","title":"Themes Menu","text":"<p>The Themes menu allows you to select and manage the themes installed in the <code>themes</code> folder of the application. This includes both the default themes and any custom themes you have added.</p> <p></p> <ul> <li> <p>Select a Theme   All themes currently located in the <code>themes</code> directory will be automatically recognized and displayed in the menu. You can switch between them instantly.</p> </li> <li> <p>Open Theme Configuration   Opens the selected theme file for editing, allowing you to customize its colors, styles, and layout.</p> </li> <li> <p>Edit <code>.extend</code> Files   This option allows you to open and modify installed <code>.extend</code> files, which define additional syntax rules for new languages or tags.</p> </li> </ul> <p>The system will automatically detect <code>.extend</code> files placed inside the program\u2019s <code>extend</code> directory.</p> <p>To learn how to create your own <code>.theme</code> and <code>.extend</code> files, refer to the following pages: \u2192 How to Create Custom Themes \u2192 Creating and Using <code>.extend</code> Syntax Files</p>"},{"location":"usage/top-menu/#help-menu","title":"Help Menu","text":"<p>The Help menu provides quick access to useful information and integrated tools for users.</p> <ul> <li> <p>About PowerEdit   Displays information about the current version of the editor, authorship, and license.</p> </li> <li> <p>Download Source Code   Offers a fast and intuitive way to download the current project or source files directly from within the editor.</p> </li> </ul> <p>\u2192 Learn more about how source code download works</p>"}]}